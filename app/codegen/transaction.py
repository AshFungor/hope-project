# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: transaction/transaction.proto, transaction/history.proto, transaction/create.proto, transaction/unpaid.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto


class DecideTransactionResponseStatus(betterproto.Enum):
    ACCEPTED = 0
    REJECTED = 1
    ALREADY_PROCESSED = 2
    COUNT_OUT_OF_BOUNDS = 3
    AMOUNT_OUT_OF_BOUNDS = 4
    SELLER_MISSING_GOODS = 5
    CUSTOMER_MISSING_MONEY = 6


class TransactionEntryStatus(betterproto.Enum):
    CREATED = 0
    APPROVED = 1
    REJECTED = 2
    COMPLETED = 3


class CreateTransactionResponseCreationStatus(betterproto.Enum):
    OK = 0
    MULTIPLE_PRODUCTS = 1


@dataclass
class DecideTransactionRequest(betterproto.Message):
    status: str = betterproto.string_field(1)
    account: int = betterproto.int32_field(2)


@dataclass
class DecideTransactionResponse(betterproto.Message):
    status: "DecideTransactionResponseStatus" = betterproto.enum_field(1)


@dataclass
class ViewHistoryRequest(betterproto.Message):
    account: int = betterproto.int32_field(1)


@dataclass
class TransactionEntry(betterproto.Message):
    transaction_id: int = betterproto.int32_field(1)
    amount: int = betterproto.int32_field(2)
    count: int = betterproto.int32_field(3)
    product: str = betterproto.string_field(4)
    second_side: int = betterproto.int32_field(5)
    status: "TransactionEntryStatus" = betterproto.enum_field(6)
    updated_at: str = betterproto.string_field(7)
    side: str = betterproto.string_field(8)
    is_money: bool = betterproto.bool_field(9)


@dataclass
class ViewTransactionsResponse(betterproto.Message):
    transactions: List["TransactionEntry"] = betterproto.message_field(1)


@dataclass
class CreateProductTransactionRequest(betterproto.Message):
    seller_account: int = betterproto.int32_field(1)
    customer_account: int = betterproto.int32_field(2)
    product: str = betterproto.string_field(3)
    count: int = betterproto.int32_field(4)
    amount: int = betterproto.int32_field(5)


@dataclass
class CreateMoneyTransactionRequest(betterproto.Message):
    seller_account: int = betterproto.int32_field(1)
    customer_account: int = betterproto.int32_field(2)
    amount: int = betterproto.int32_field(3)


@dataclass
class CreateTransactionResponse(betterproto.Message):
    status: "CreateTransactionResponseCreationStatus" = betterproto.enum_field(1)


@dataclass
class ViewCurrentTransactionsRequest(betterproto.Message):
    account: int = betterproto.int32_field(1)


@dataclass
class CurrentTransactionEntry(betterproto.Message):
    transaction_id: int = betterproto.int32_field(1)
    amount: int = betterproto.int32_field(2)
    count: int = betterproto.int32_field(3)
    product: str = betterproto.string_field(4)
    second_side: int = betterproto.int32_field(5)


@dataclass
class CurrentTransactionsResponse(betterproto.Message):
    transactions: List["CurrentTransactionEntry"] = betterproto.message_field(1)
